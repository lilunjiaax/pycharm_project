"""
类对象，实例对象 都会占据一份内存空间，
类属性是大家共有的，放在类对象的空间里，
实例属性是各个实例对象自己独有的
----------------------------
实例对象 要想修改类属性：
1. obj1.country = 'xxx'   --->  只会给自己添加一个实例属性。
2. obj1.__class__.country = 'xxx'   --->  才会修改成功。
3. 用类方法修改类属性


"""

class Province(object):

    # 类属性
    county = '中国'

    def __init__(self,name):

        # 实例属性
        self.name = name


# 创建一个实例对象

obj = Province('山东')
"""
1. __new__   --->  创建对象，也就是有个内存空间
2. __init__  --->  对刚刚申请的内存空间进行初始化
"""


"""
类方法：函数前面有 @classmethod
实例方法：前面没有 @classmethod
静态方法：就相当于把方法从类中拿出来，放到外边来， 前面有： @staticmethod 
----> 是为了专门区别于 类对象和实例对象。不需要传参数

这三个方法只会存在类对象中一份，不会随着实例化进行复制

"""












